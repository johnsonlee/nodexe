#!/bin/sh

CWD=$(dirname $0)
BIN=$(basename $1)

NCPU="$(grep 'cpu cores' /proc/cpuinfo | sort -u | awk -F: '{print $2}')"

NODE_VER="v0.10.21"
NODE_DIR="node-${NODE_VER}"
NODE_ARC="${NODE_DIR}.tar.gz"
NODE_URL="http://nodejs.org/dist/${NODE_VER}/${NODE_ARC}"

TEMP_DIR=$(mktemp -d)

MAIN_JS="$TEMP_DIR/$NODE_DIR/lib/main.js"


# Wrap a single js file as a module
wrap()
{
    local path=$1

    echo "define('$path', function(require, module, exports, __dirname, __filename) {"

    grep -roP "require\([\'\"]\.{1,2}(/[a-zA-Z\.\-\_]+)+[\'\"]\)" $path | awk -F: '{print $1}' | while read module; do
        local dir=$(dirname $path)
        local mid=${dir}/$(echo $module | awk -F"[\'\"]" '{print $2}')

        if [ ! -e "$mid" ]; then
            if [ -f "${mid}.js" ]; then
                mid=${mid}.js
            fi
        elif [ -d "$mid" ]; then
            if [ -f "${mid}/index.js" ]; then
                mid=${mid}/index.js
            elif [ -f "${mid}.js" ]; then
                mid=${mid}.js
            fi
        fi

        if [ -e "$mid" ]; then
            mid=$(realpath $mid)
        fi

        local escmod=$(echo $module | sed -e 's/\./\\./g' -e 's/\//\\\//g')
        sed -i "s|${escmod}|require('${mid}', module)|g" $path
    done 2> /dev/null

    cat $path

    echo "});"
}

# Download node
if [ -f "$HOME/Downloads/$NODE_ARC" ]; then
    tar -xf $HOME/Downloads/$NODE_ARC -C $TEMP_DIR || exit 1
else
    echo "Downloading from $NODE_URL"
    curl $NODE_URL > $TEMP_DIR/$NODE_ARC && tar -xvf $TEMP_DIR/$NODE_ARC -C $TEMP_DIR || exit 1
fi

# definition
cat > $MAIN_JS << EOF
var modules = {};
var definitions = {};
var dirname = require('path').dirname;
var basename = require('path').basename;

function _require(path, parent) {
    if (modules[path]) {
        return modules[path];
    }

    var module = {
        id : path,
        exports : {},
        parent : parent,
        __dirname : dirname(path),
        __filename : basename(path),
    };
    var definition = definitions[path];

    if (!definition) {
        return require(path);
    }

    definition(_require, module, module.exports, module.__dirname, module.__filename);

    return modules[path] = module.exports;
}

function define(path, definition) {
    definitions[path] = definition;
}

EOF

for path in $(cat); do
    wrap $(realpath $path) >> $MAIN_JS
done

cat >> $MAIN_JS << EOF

_require('$(realpath $1)');
EOF

# Inject main.js into node source code
sed -i -e "s/\('src\/node\.js'\)/\1,\n      'lib\/main\.js'/g" $TEMP_DIR/$NODE_DIR/node.gyp || exit 1

# Apply patch to node
patch -p1 -d $TEMP_DIR/$NODE_DIR < $CWD/../patches/$NODE_DIR.patch || exit 1

# Build node
$TEMP_DIR/$NODE_DIR/configure \
    && make -j${NCPU} -C $TEMP_DIR/$NODE_DIR \
    && strip $TEMP_DIR/$NODE_DIR/out/Release/node -o $PWD/${BIN%%.*}

